name: Build and Test

on:
  push:
    branches: [ "main", "develop", "feature/*", "hotfix/*" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_call:  # Allow this to be called by other workflows

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'source/Electrified.TimeSeries/Electrified.TimeSeries.csproj'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    outputs:
      build-successful: ${{ steps.build-status.outputs.success }}
      test-successful: ${{ steps.test-status.outputs.success }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Needed for versioning and git operations

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: |
        echo "🔄 Restoring NuGet packages..."
        dotnet restore
        echo "✅ Dependencies restored successfully"

    - name: Build Debug
      id: build-debug
      run: |
        echo "🏗️ Building Debug configuration..."
        dotnet build --configuration Debug --no-restore --verbosity normal
        echo "✅ Debug build completed successfully"

    - name: Build Release (Tags Only)
      if: github.ref_type == 'tag'
      id: build-release
      run: |
        echo "🏗️ Building Release configuration for tag..."
        dotnet build --configuration Release --no-restore --verbosity normal
        echo "✅ Release build completed successfully"

    - name: Run Tests
      id: run-tests
      run: |
        echo "🧪 Running test suite..."
        dotnet test --configuration Debug --no-build --verbosity normal --logger trx --results-directory TestResults
        echo "✅ All tests passed successfully"

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.run_number }}
        path: TestResults/*.trx
        retention-days: 7

    - name: Set Build Status Output
      id: build-status
      if: always()
      run: |
        if [ "${{ steps.build-debug.outcome }}" == "success" ] && ([ "${{ github.ref_type }}" != "tag" ] || [ "${{ steps.build-release.outcome }}" == "success" ]); then
          echo "success=true" >> $GITHUB_OUTPUT
          echo "✅ Build status: SUCCESS"
        else
          echo "success=false" >> $GITHUB_OUTPUT
          echo "❌ Build status: FAILED"
        fi

    - name: Set Test Status Output
      id: test-status
      if: always()
      run: |
        if [ "${{ steps.run-tests.outcome }}" == "success" ]; then
          echo "success=true" >> $GITHUB_OUTPUT
          echo "✅ Test status: SUCCESS"
        else
          echo "success=false" >> $GITHUB_OUTPUT
          echo "❌ Test status: FAILED"
        fi

    - name: Summary
      if: always()
      run: |
        echo "## Build and Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Debug Build | ${{ steps.build-debug.outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.ref_type }}" == "tag" ]; then
          echo "| Release Build | ${{ steps.build-release.outcome == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        fi
        echo "| Tests | ${{ steps.run-tests.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
