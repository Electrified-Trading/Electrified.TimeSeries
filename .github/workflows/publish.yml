name: Build and Publish NuGet Package

on:
  push:
    branches: [ "main", "develop", "feature/*", "hotfix/*" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'source/Electrified.TimeSeries/Electrified.TimeSeries.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: 'https://nuget.pkg.github.com/Electrified-Trading/index.json'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for versioning

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal    # Generate version suffix for preview packages (non-tag pushes)
    - name: Generate Preview Version Suffix
      if: github.ref_type != 'tag'
      run: |
        # Get branch name and clean it for package versioning
        $branchName = "${{ github.ref_name }}" -replace '[^a-zA-Z0-9]', ''
        # Get UTC timestamp in format YYYYMMDDHHmm
        $utcTimestamp = (Get-Date).ToUniversalTime().ToString("yyyyMMddHHmm")
        # Create version suffix: branch-timestamp
        $versionSuffix = "$branchName-$utcTimestamp"
        echo "VERSION_SUFFIX=$versionSuffix" >> $env:GITHUB_ENV
        echo "Version suffix: $versionSuffix"
      shell: pwsh

    # Extract version from tag (tag pushes)
    - name: Extract Release Version
      if: github.ref_type == 'tag'
      run: |
        # Remove 'v' prefix from tag (e.g., v1.0.0 -> 1.0.0)
        $tagVersion = "${{ github.ref_name }}" -replace '^v', ''
        echo "PACKAGE_VERSION=$tagVersion" >> $env:GITHUB_ENV
        echo "Release version: $tagVersion"
      shell: pwsh

    # Pack with version suffix for preview builds
    - name: Pack NuGet Package (Preview)
      if: github.ref_type != 'tag'
      run: |
        dotnet pack ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --include-symbols \
          --include-source \
          --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} \
          --version-suffix ${{ env.VERSION_SUFFIX }}

    # Pack with explicit version for release builds
    - name: Pack NuGet Package (Release)
      if: github.ref_type == 'tag'
      run: |
        dotnet pack ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --no-build \
          --include-symbols \
          --include-source \
          --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }} \
          -p:PackageVersion=${{ env.PACKAGE_VERSION }}

    # Only publish on pushes (not PRs) and when build succeeds
    - name: Publish to GitHub Packages
      if: github.event_name == 'push'
      run: |
        dotnet nuget push "${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg" \
          --source ${{ env.NUGET_SOURCE_URL }} \
          --api-key ${{ secrets.GITHUB_TOKEN }} \
          --skip-duplicate

    # Upload package artifacts for inspection
    - name: Upload Package Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg
        retention-days: 30
